# -*- coding: utf-8 -*-
"""Polygon_class.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12mzdkO1DBND5yJ1YGQx5ABzgMIqUnBzI
"""

import math

class Convex_Polygon:
    def __init__(self, sides, radius):
        self.sides = sides
        self.radius = radius

    def __repr__(self):
        return f"Polygon(n={self.sides}, R={self.radius})"

    def __eq__(self, other):
        if isinstance(other, self.__class__):
            return (self.sides == other.sides and
                    self.radius == other.radius)
        else:
            return NotImplemented

    def __gt__(self, other):
        if isinstance(other, self.__class__):
            return self.sides > other.sides
        else:
            return NotImplemented

    def interior_angle(self):
        return (self.sides - 2) * 180 / self.sides

    def side_length(self):
        return 2 * self.radius * math.sin(math.pi / self.sides)

    def apothem(self):
        return self.radius * math.cos(math.pi / self.sides)

    def area(self):
        return self.sides * self.side_length() * self.apothem() / 2

    def perimeter(self):
        return self.sides * self.side_length()

