# -*- coding: utf-8 -*-
"""Custom_Polygon_sequence.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12mzdkO1DBND5yJ1YGQx5ABzgMIqUnBzI
"""

import polygon_class
from polygon_class import Convex_Polygon

class custom_Polygon_sequence:
    def __init__(self, max_sides, circumradius):
        self.max_sides = max_sides
        self.circumradius = circumradius
        self.polygons = [Convex_Polygon(i, self.circumradius) for i in range(3, self.max_sides + 1)]

    def __len__(self):
        return self.max_sides - 2

    #def __repr__(self):
        #return f"Polygon(n={self.max_sides}, R={self.circumradius})"

    def __getitem__(self, s):
        return self.polygons[s]

    def max_efficiency_polygon(self):
        sorted_polygons = sorted(self.polygons, key=lambda p: p.area() / p.perimeter(), reverse=True)
        return sorted_polygons[0], sorted_polygons[0].area() / sorted_polygons[0].perimeter()


print("Maximum Efficiency Polygon till n=25 is:",custom_Polygon_sequence.max_efficiency_polygon(custom_Polygon_sequence(25, 2)))

